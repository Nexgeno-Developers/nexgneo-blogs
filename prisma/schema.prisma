

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}



model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole @default(USER)
  accounts      Account[]
  posts         Post[]
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique

  posts       Post[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


model Post {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  description String
  textEditor  String
  image       String
  metaTitle   String
  metaDesc    String
  views       Int       @default(0)
  isPublished Boolean   @default(false)

  categoryId  String    @db.ObjectId
  category    Category  @relation(fields: [categoryId], references: [id])
  
  authorId    String    @db.ObjectId
  author      User      @relation(fields: [authorId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt


  @@fulltext([title])
}




model Leads {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  last     String?
  email    String
  country  String
  mobile   String
  subject  String
  message  String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}



model Services {
  id         String @id @default(auto()) @map("_id")  @db.ObjectId
  image      String
  title      String
  desc       String
  slug       String @unique
  metaTitle  String
  metaDesc   String
  content    String


  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model PasswordResetToken {
  id         String @id @default(auto()) @map("_id")  @db.ObjectId
  email      String
  token      String @unique
  expires    DateTime

  @@unique([email, token])
}
