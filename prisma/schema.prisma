generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  accounts      Account[]
  posts         Post[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  posts Post[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String  @unique
  description String
  textEditor  String
  image       String
  metaTitle   String
  metaDesc    String
  views       Int     @default(0)
  isPublished Boolean @default(false)

  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])

  authorId String @db.ObjectId
  author   User   @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@fulltext([title])
}

model Leads {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  last    String?
  email   String
  mobile  String
  subject String
  company_name String?
  interested_service String?
  project_budget String?
  message String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Services {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  altTag    String?
  title     String
  desc      String
  slug      String  @unique
  metaTitle String
  metaDesc  String
  content   String
  series      Int?
  whyChoose String?
  showInMenu   Boolean?
  menuTitle String?
  schema String?
  portfolioIds String[] @default([]) @db.ObjectId
  clientIds String[] @default([]) @db.ObjectId      // NEW
  technologyIds String[] @default([]) @db.ObjectId  // NEW
  resultIds String[] @default([]) @db.ObjectId      // NEW
  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HireDeveloper {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  altTag    String?
  title     String
  desc      String
  slug      String  @unique
  metaTitle String
  metaDesc  String
  content   String
  whyChoose String?
  series      Int?
  showInMenu   Boolean?
  menuTitle String?
  schema String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Industries {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  altTag    String?
  title     String
  desc      String
  slug      String  @unique
  metaTitle String
  metaDesc  String
  content   String
  series      Int?
  whyChoose String?
  showInMenu   Boolean?
  menuTitle String?
  schema String?


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Solutions {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  altTag    String?
  title     String
  desc      String
  slug      String  @unique
  metaTitle String
  metaDesc  String
  content   String
  whyChoose String?
  process String?
  series      Int?
  showInMenu   Boolean?
  menuTitle String?
  schema String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PasswordResetToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Portfolio {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  image       String?
  title       String
  technology  String[] // Array of strings for multiple technologies
  category    String
  description String[] @default([])
  slug        String?
  series      Int?
  showInCaseStudy Boolean?
  tags        String[] @default([])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Client {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  logo      String   // URL from Cloudinary via MediaSelect
  altTag    String?
  name      String   // Client name
  series    Int?     // For ordering
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Technology {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  image     String   // URL from Cloudinary via MediaSelect
  altTag    String?
  title     String   // Technology name (e.g., "Canva", "React")
  category  String?  // Optional grouping (e.g., "Design Tools", "Frontend")
  series    Int?     // For ordering
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Result {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  icon         String   // URL from Cloudinary via MediaSelect
  iconAltTag   String?
  title        String   // e.g., "500+"
  desc         String   // Description text
  image        String   // Main image URL from Cloudinary via MediaSelect
  imageAltTag  String?
  buttonText   String   // Button text (e.g., "View Our Work")
  slug         String?  @unique // For SEO
  metaTitle    String?
  metaDesc     String?
  series       Int?     // For ordering
  showOnHome   Boolean  @default(false) // Toggle for homepage visibility
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}